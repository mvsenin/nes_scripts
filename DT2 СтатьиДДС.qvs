//  Вариант с масками статей
[ТМП_Классификатор статей ДДС]:
Load 
	*,
	Replace(Replace([Формула1],'+',''),'-','') as Формула_
;
LOAD
    [Код статьи отчета] as %СтатьяДДС
    , [Статья отчета] as СтатьяДДС
    , [Статья отчета с проверкой] as СтатьяДДСсПроверкой
    , [Тип расчета]
    , SubField(LTrim(Replace(Replace(Replace(Replace([ФормулаРег],' ',''),'+',' +'),'-',' -'), '0000000000', 'xxxxxxxxxx')),' ') as Формула1
FROM [$(sSourceData)/Классификатор статей ДДС.xlsx] (ooxml, embedded labels, table is [Классификатор статей отчета])
Where
	not IsNull([Статья отчета с проверкой])
;

Left Join([ТМП_Классификатор статей ДДС])
LOAD 
	Формула1 as Формула2
    //, ФормулаРег1 as ФормулаРег2
    , %СтатьяДДС as Формула_
Resident [ТМП_Классификатор статей ДДС];

СтатьиДДС:
load
	%СтатьяДДС,
    СтатьяДДС,
    СтатьяДДСсПроверкой,
    [Тип расчета],
	Replace(%Кодификатор, 'xxxxxxxxxx', '0000000000') as %Кодификатор,
    _Множитель;
Load
	%СтатьяДДС
    , СтатьяДДС
    , СтатьяДДСсПроверкой
    , [Тип расчета]
    , Num#(Replace(Replace(if([Тип расчета] = 'Статьи',Формула2,Формула1),'+',''),'-',''))  as %Кодификатор
    , if(Left(if([Тип расчета] = 'Статьи',Формула2,Формула1),1)='+',1,-1) as _Множитель
    //, Num#(Replace(Replace(if([Тип расчета] = 'Статьи',ФормулаРег2,ФормулаРег1),'+',''),'-',''))  as %КодификаторРег
Resident [ТМП_Классификатор статей ДДС];

Drop Table [ТМП_Классификатор статей ДДС];


Concatenate(СтатьиДДС)
Load
	'' as %СтатьяДДС
    , 'ПУСТО' as СтатьяДДС
    , 'ПУСТО' as СтатьяДДСсПроверкой
    , '' as [Тип расчета]
    , '00000000000000000000000000000000'  as %Кодификатор
    //, '00000000000000000000000000000000'  as %КодификаторРег
    , 1 as _Множитель
AutoGenerate 1;

Store СтатьиДДС into [$(sPathDataTier2)/Dictionaries/СтатьиДДС_Маски.qvd] (qvd);
Drop table СтатьиДДС;